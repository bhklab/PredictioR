length(int)
## PCA analysis
expr <- cbind(expr.cia[order(rownames(expr.cia)), ],
expr.tcga[order(rownames(expr.tcga)), ])
clin <- data.frame(patientid = c(rownames(clin.cia),
rownames(clin.tcga)),
study = c(rep("CIA", nrow(clin.cia)),
rep("TCGA", nrow(clin.tcga))),
group = c(clin.cia[, c("low_high")],
clin.tcga[, "low_high"] ))
group <- factor(clin$study)
cols <- c("#9970ab", "#74add1")
pca.results <- prcomp(t(expr))
var.res <- pca.results$sdev^2 / sum(pca.results$sdev^2)
var.res[1:3]
jpeg(file = "C:/Pancreas_Kevin/result/pca.jpeg", width = 700, height = 700, res = 150)
plot(pca.results$x[,1],pca.results$x[,2],pch=19, xlab='PC1 (90%)',ylab='PC2 (1%)',
main='TCGA & CIA')
ind= group == levels(group)[1]
points(pca.results$x[ind,1],pca.results$x[ind,2], pch=19,col=cols[1])
ind= group == levels(group)[2]
points(pca.results$x[ind,1],pca.results$x[ind,2], pch=19,col=cols[2])
legend('topright',paste(levels(group)), pch=19,col=cols, cex=0.8)
dev.off()
annot <- annot.tcga[annot.tcga$gene_name %in% int, ]
rownames(clin) <- clin$patientid
clin <- clin[order(rownames(clin)), ]
expr <- expr[, order(colnames(expr))]
colnames(expr) <- rownames(clin)
eset <- SummarizedExperiment(assays = list("gene_expression"= expr),
rowData= annot,
colData= clin)
save(eset, file="C:/Pancreas_Kevin/expr_tcga_cia.rda")
clin <- data.frame(colData(eset))
expr <- assay(eset)
annot <- data.frame(rowData(eset))
mod0 <- model.matrix(~1, data=clin)
mod <- model.matrix(~ as.factor(group), data=clin)
n.sv <- num.sv(expr, mod, method="be") # both leek and be methods estimate 4 batches
n.sv
svobj <- sva(expr, mod =  mod, mod0 = mod0, n.sv=n.sv)
########################################################
## Limma method and adjusting for estimated batches
########################################################
modSv <- model.matrix(~ svobj$sv + as.factor(clin$group))
fit <- lmFit(expr, modSv)
corrected.expr.lm <- (expr-fit$coefficients[,2:(ncol(modSv)-1)]%*%t(modSv[,2:(ncol(modSv)-1)]))
group <- factor(clin$study)
cols <- c("#9970ab", "#74add1")
pca.results <- prcomp(t(corrected.expr.lm))
var.res <- pca.results$sdev^2 / sum(pca.results$sdev^2)
jpeg(file = "C:/Pancreas_Kevin/result/corrected_expr_pca.jpeg", width = 700, height = 700, res = 150)
plot(pca.results$x[,1],pca.results$x[,2],pch=19, xlab='PC1 (23%)',ylab='PC2 (6%)',
main='TCGA & CIA')
ind= group == levels(group)[1]
points(pca.results$x[ind,1],pca.results$x[ind,2], pch=19,col=cols[1])
ind= group == levels(group)[2]
points(pca.results$x[ind,1],pca.results$x[ind,2], pch=19,col=cols[2])
legend('topright',paste(levels(group)), pch=19,col=cols, cex=0.8)
dev.off()
eset <- SummarizedExperiment(assays = SimpleList("gene_expression"= corrected.expr.lm),
rowData= annot,
colData= clin)
save(eset, file="C:/Pancreas_Kevin/corrected_expr_tcga_cia.rda")
# Load SE obj
load("C:/Pancreas_Kevin/corrected_expr_tcga_cia.rda")
# Extract Clinical data
clin <- data.frame(colData(eset))
# Extract the expression data
expr <- assay(eset)
# Extract the annotation
annot <- data.frame(rowData(eset))
# Display first few rows of the dataset
DT::datatable(round(expr[1:8, 1:8], 3))  ## round to three digits for visualization
range(expr)
group <- factor(clin$study)
cols <- c("#9970ab", "#74add1")
pca.results <- prcomp(t(expr))
var.res <- pca.results$sdev^2 / sum(pca.results$sdev^2)
plot(pca.results$x[,1],pca.results$x[,2],pch=19, xlab='PC1 (23%)',ylab='PC2 (6%)',
main='TCGA & CIA Studies')
ind= group == levels(group)[1]
points(pca.results$x[ind,1],pca.results$x[ind,2], pch=19,col=cols[1])
ind= group == levels(group)[2]
points(pca.results$x[ind,1],pca.results$x[ind,2], pch=19,col=cols[2])
legend('topright',paste(levels(group)), pch=19,col=cols, cex=0.8)
design <- model.matrix(~ clin$group)
fit <- lmFit(expr, design)
fit <- eBayes(fit)
# Preview
DT::datatable(topTable(fit, sort.by = "P"))
# Write the data frame to a CSV file
top.table <- topTable(fit, sort.by = "P", n = Inf)
table(top.table$adj.P.Val < 0.05)
table(top.table$adj.P.Val < 0.05, top.table$logFC < 0)
# #2. Volcano plot.
# Retrieve all results from the analysis
volcano_data <- topTable(fit, number=Inf)
# 2.1 Volcano Plot based on P value
EnhancedVolcano(volcano_data,
lab = rownames(volcano_data),
x = 'logFC',
y = 'P.Value',
pCutoff = 0.1,
xlim = c(-1, 1),
ylim = c(0, -log10(10e-7)),
title= 'Volcano Plot based on P value'
)
rm(list=ls())
library(sva)
library(limma)
##########################################################
## load data
dir <- "C:/Pancreas_Kevin/data/"
dat.cia <- readRDS(file.path(dir, "SE_CIA.rds"))  ### Task 1: check comment at the end of script
dat.tcga <- readRDS(file.path(dir, "SE_TCGA.rds"))
dat.icgc <- readRDS(file.path(dir, "SE_ICGC.rds"))
## extract RNA, clinical, and annotation data
expr.tcga <- assay(dat.tcga)
clin.tcga <- data.frame(colData(dat.tcga))
annot.tcga <- data.frame(rowData(dat.tcga))
expr.cia <- assay(dat.cia)
clin.cia <- data.frame(colData(dat.cia))
annot.cia <- data.frame(rowData(dat.cia))
expr.icgc <- assay(dat.icgc)
clin.icgc <- data.frame(colData(dat.icgc))
annot.icgc <- data.frame(rowData(dat.icgc))
## remove TCGA NAs
gene.na <- apply(expr.tcga, 1, function(x){any(is.na(x))})
sum(gene.na)
expr.tcga <- expr.tcga[!gene.na,]
int <- intersect(intersect(rownames(expr.tcga), rownames(expr.cia)),
rownames(expr.icgc)) # 15376 genes in common
expr.tcga <- expr.tcga[rownames(expr.tcga) %in% int, ]
expr.cia <- expr.cia[rownames(expr.cia) %in% int, ]
expr.icgc <- expr.icgc[rownames(expr.icgc) %in% int, ]
## PCA analysis
expr <- cbind(expr.cia[order(rownames(expr.cia)), ],
expr.tcga[order(rownames(expr.tcga)), ],
expr.icgc[order(rownames(expr.icgc)), ])
clin <- data.frame(patientid = c(rownames(clin.cia),
rownames(clin.tcga),
rownames(clin.icgc)),
study = c(rep("CIA", nrow(clin.cia)),
rep("TCGA", nrow(clin.tcga)),
rep("ICGC", nrow(clin.icgc))),
group = c(clin.cia[, "low_high"],
clin.tcga[, "low_high"] ,
clin.icgc[, "low_high"]))
group <- factor(clin$study)
group <- factor(clin$study)
cols <- c("#9970ab", "#74add1", "grey")
pca.results <- prcomp(t(expr))
var.res <- pca.results$sdev^2 / sum(pca.results$sdev^2)
var.res[1:3]
jpeg(file = "C:/Pancreas_Kevin/result/pca.jpeg", width = 700, height = 700, res = 150)
plot(pca.results$x[,1],pca.results$x[,2],pch=19, xlab='PC1 (81%)',ylab='PC2 (9%)',
main='TCGA & CIA & ICGC')
ind= group == levels(group)[1]
points(pca.results$x[ind,1],pca.results$x[ind,2], pch=19,col=cols[1])
ind= group == levels(group)[2]
points(pca.results$x[ind,1],pca.results$x[ind,2], pch=19,col=cols[2])
legend('topright',paste(levels(group)), pch=19,col=cols, cex=0.8)
dev.off()
annot <- annot.tcga[annot.tcga$gene_name %in% int, ]
rownames(clin) <- clin$patientid
clin <- clin[order(rownames(clin)), ]
expr <- expr[, order(colnames(expr))]
colnames(expr) <- rownames(clin)
eset <- SummarizedExperiment(assays = list("gene_expression"= expr),
rowData= annot,
colData= clin)
save(eset, file="C:/Pancreas_Kevin/expr_tcga_cia_icgc.rda")
clin <- data.frame(colData(eset))
expr <- assay(eset)
annot <- data.frame(rowData(eset))
mod0 <- model.matrix(~1, data=clin)
mod <- model.matrix(~ as.factor(group), data=clin)
n.sv <- num.sv(expr, mod, method="be") # both leek and be methods estimate 4 batches
n.sv
n.sv <- num.sv(expr, mod, method="be") # both leek and be methods estimate 4 batches
svobj <- sva(expr, mod =  mod, mod0 = mod0, n.sv=n.sv)
head(svobj$sv)
########################################################
## Limma method and adjusting for estimated batches
########################################################
modSv <- model.matrix(~ svobj$sv + as.factor(clin$group))
fit <- lmFit(expr, modSv)
corrected.expr.lm <- (expr-fit$coefficients[,2:(ncol(modSv)-1)]%*%t(modSv[,2:(ncol(modSv)-1)]))
as.factor(clin$group)
group <- factor(clin$study)
cols <- c("#9970ab", "#74add1")
pca.results <- prcomp(t(corrected.expr.lm))
var.res <- pca.results$sdev^2 / sum(pca.results$sdev^2)
group
var.res[1:3]
jpeg(file = "C:/Pancreas_Kevin/result/corrected_expr_pca.jpeg", width = 700, height = 700, res = 150)
plot(pca.results$x[,1],pca.results$x[,2],pch=19, xlab='PC1 (17%)',ylab='PC2 (6%)',
main='TCGA & CIA & ICGC')
ind= group == levels(group)[1]
points(pca.results$x[ind,1],pca.results$x[ind,2], pch=19,col=cols[1])
ind= group == levels(group)[2]
points(pca.results$x[ind,1],pca.results$x[ind,2], pch=19,col=cols[2])
ind= group == levels(group)[3]
points(pca.results$x[ind,1],pca.results$x[ind,2], pch=19,col=cols[3])
legend('topright',paste(levels(group)), pch=19,col=cols, cex=0.8)
dev.off()
eset <- SummarizedExperiment(assays = SimpleList("gene_expression"= corrected.expr.lm),
rowData= annot,
colData= clin)
save(eset, file="C:/Pancreas_Kevin/corrected_expr_tcga_cia_icgc.rda")
# Load SE obj
load("C:/Pancreas_Kevin/corrected_expr_tcga_cia_icgc.rda")
# Extract Clinical data
clin <- data.frame(colData(eset))
# Extract the expression data
expr <- assay(eset)
# Extract the annotation
annot <- data.frame(rowData(eset))
# Display first few rows of the dataset
DT::datatable(round(expr[1:8, 1:8], 3))  ## round to three digits for visualization
range(expr)
design <- model.matrix(~ clin$group)
fit <- lmFit(expr, design)
fit <- eBayes(fit)
# Preview
DT::datatable(topTable(fit, sort.by = "P"))
# Write the data frame to a CSV file
top.table <- topTable(fit, sort.by = "P", n = Inf)
# #2. Volcano plot.
# Retrieve all results from the analysis
volcano_data <- topTable(fit, number=Inf)
# 2.1 Volcano Plot based on P value
EnhancedVolcano(volcano_data,
lab = rownames(volcano_data),
x = 'logFC',
y = 'P.Value',
pCutoff = 0.1,
xlim = c(-1, 1),
ylim = c(0, -log10(10e-7)),
title= 'Volcano Plot based on P value'
)
###############################################################################
## Remove batches
###############################################################################
load(file="C:/Pancreas_Kevin/expr_tcga_cia_icgc.rda")
clin <- data.frame(colData(eset))
expr <- assay(eset)
annot <- data.frame(rowData(eset))
mod0 <- model.matrix(~1, data=clin)
mod <- model.matrix(~ as.factor(group), data=clin)
n.sv <- num.sv(expr, mod, method="be") # both leek and be methods estimate 4 batches
svobj <- sva(expr, mod =  mod, mod0 = mod0, n.sv=n.sv)
head(svobj$sv)
########################################################
## Limma method and adjusting for estimated batches
########################################################
modSv <- model.matrix(~ svobj$sv + as.factor(clin$group))
fit <- lmFit(expr, modSv)
head(modSV)
head(modSv)
#corrected.expr.lm <- (expr-fit$coefficients[,2:(ncol(modSv)-1)]%*%t(modSv[,2:(ncol(modSv)-1)]))
head(coef(fit))
contr <- makeContrasts(as.factor(clin$group)LOW, levels = colnames(coef(fit)))
contr <- contrasts.fit(fit, coef = 5)
tmp <- eBayes(contr)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
head(top.table, 20)
table(top.table$adj.P.Val < 0.05)
table(top.table$adj.P.Val < 0.05, top.table$logFC < 0)
EnhancedVolcano(top.table,
lab = rownames(volcano_data),
x = 'logFC',
y = 'P.Value',
pCutoff = 0.1,
xlim = c(-1, 1),
ylim = c(0, -log10(10e-7)),
title= 'Volcano Plot based on P value'
)
rm(list=ls())
library(sva)
library(limma)
##########################################################
## load data
dir <- "C:/Pancreas_Kevin/data/"
dat.cia <- readRDS(file.path(dir, "SE_CIA.rds"))  ### Task 1: check comment at the end of script
dat.tcga <- readRDS(file.path(dir, "SE_TCGA.rds"))
dat.icgc <- readRDS(file.path(dir, "SE_ICGC.rds"))
## extract RNA, clinical, and annotation data
expr.tcga <- assay(dat.tcga)
clin.tcga <- data.frame(colData(dat.tcga))
annot.tcga <- data.frame(rowData(dat.tcga))
expr.cia <- assay(dat.cia)
clin.cia <- data.frame(colData(dat.cia))
annot.cia <- data.frame(rowData(dat.cia))
expr.icgc <- assay(dat.icgc)
clin.icgc <- data.frame(colData(dat.icgc))
annot.icgc <- data.frame(rowData(dat.icgc))
## remove TCGA NAs
gene.na <- apply(expr.tcga, 1, function(x){any(is.na(x))})
sum(gene.na)
expr.tcga <- expr.tcga[!gene.na,]
## common genes
int <- intersect(intersect(rownames(expr.tcga), rownames(expr.cia)),
rownames(expr.icgc)) # 15376 genes in common
length(int)
expr.tcga <- expr.tcga[rownames(expr.tcga) %in% int, ]
expr.cia <- expr.cia[rownames(expr.cia) %in% int, ]
expr.icgc <- expr.icgc[rownames(expr.icgc) %in% int, ]
## PCA analysis
expr <- cbind(expr.cia[order(rownames(expr.cia)), ],
expr.tcga[order(rownames(expr.tcga)), ],
expr.icgc[order(rownames(expr.icgc)), ])
clin <- data.frame(patientid = c(rownames(clin.cia),
rownames(clin.tcga),
rownames(clin.icgc)),
study = c(rep("CIA", nrow(clin.cia)),
rep("TCGA", nrow(clin.tcga)),
rep("ICGC", nrow(clin.icgc))),
group = c(clin.cia[, "low_high"],
clin.tcga[, "low_high"] ,
clin.icgc[, "low_high"]))
group <- factor(clin$study)
cols <- c("#9970ab", "#74add1", "grey")
pca.results <- prcomp(t(expr))
var.res <- pca.results$sdev^2 / sum(pca.results$sdev^2)
var.res[1:3]
jpeg(file = "C:/Pancreas_Kevin/result/pca.jpeg", width = 700, height = 700, res = 150)
plot(pca.results$x[,1],pca.results$x[,2],pch=19, xlab='PC1 (82%)',ylab='PC2 (9%)',
main='TCGA & CIA & ICGC')
ind= group == levels(group)[1]
points(pca.results$x[ind,1],pca.results$x[ind,2], pch=19,col=cols[1])
ind= group == levels(group)[2]
points(pca.results$x[ind,1],pca.results$x[ind,2], pch=19,col=cols[2])
legend('topright',paste(levels(group)), pch=19,col=cols, cex=0.8)
dev.off()
## save merged processed data (TCGA & CIA & ICGC)
annot <- annot.tcga[annot.tcga$gene_name %in% int, ]
rownames(clin) <- clin$patientid
clin <- clin[order(rownames(clin)), ]
expr <- expr[, order(colnames(expr))]
colnames(expr) <- rownames(clin)
eset <- SummarizedExperiment(assays = list("gene_expression"= expr),
rowData= annot,
colData= clin)
save(eset, file="C:/Pancreas_Kevin/expr_tcga_cia_icgc.rda")
###############################################################################
## Remove batches
###############################################################################
load(file="C:/Pancreas_Kevin/expr_tcga_cia_icgc.rda")
clin <- data.frame(colData(eset))
expr <- assay(eset)
annot <- data.frame(rowData(eset))
mod0 <- model.matrix(~1, data=clin)
mod <- model.matrix(~ as.factor(group), data=clin)
n.sv <- num.sv(expr, mod, method="leek") # both leek and be methods estimate 4 batches
svobj <- sva(expr, mod =  mod, mod0 = mod0, n.sv=n.sv)
n.sv <- num.sv(expr, mod, method="be") # both leek and be methods estimate 4 batches
svobj <- sva(expr, mod =  mod, mod0 = mod0, n.sv=n.sv)
svobj <- sva(expr, mod =  mod, mod0 = mod0, n.sv=n.sv)
head(svobj$sv)
########################################################
## Limma method and adjusting for estimated batches
########################################################
modSv <- model.matrix(~ svobj$sv + as.factor(clin$group))
fit <- lmFit(expr, modSv)
#corrected.expr.lm <- (expr-fit$coefficients[,2:(ncol(modSv)-1)]%*%t(modSv[,2:(ncol(modSv)-1)]))
head(coef(fit))
contr <- contrasts.fit(fit, coef = 6)
tmp <- eBayes(contr)
top.table <- topTable(tmp, sort.by = "P", n = Inf)
head(top.table, 20)
table(top.table$adj.P.Val < 0.05)
table(top.table$adj.P.Val < 0.05, top.table$logFC < 0)
rm(list=ls())
dir <- "C:/Pancreas_Kevin/data/"
dat.cia <- readRDS(file.path(dir, "SE_CIA.rds"))  ### Task 1: check comment at the end of script
dat.tcga <- readRDS(file.path(dir, "SE_TCGA.rds"))
#dat.icgc <- readRDS(file.path(dir, "SE_ICGC.rds"))
## extract RNA, clinical, and annotation data
expr.tcga <- assay(dat.tcga)
clin.tcga <- data.frame(colData(dat.tcga))
annot.tcga <- data.frame(rowData(dat.tcga))
expr.cia <- assay(dat.cia)
clin.cia <- data.frame(colData(dat.cia))
annot.cia <- data.frame(rowData(dat.cia))
#expr.icgc <- assay(dat.icgc)
#clin.icgc <- data.frame(colData(dat.icgc))
#annot.icgc <- data.frame(rowData(dat.icgc))
## remove TCGA NAs
gene.na <- apply(expr.tcga, 1, function(x){any(is.na(x))})
sum(gene.na)
expr.tcga <- expr.tcga[!gene.na,]
## common genes
int <- intersect(rownames(expr.tcga), rownames(expr.cia)) # 17597 genes in common
expr.tcga <- expr.tcga[rownames(expr.tcga) %in% int, ]
expr.cia <- expr.cia[rownames(expr.cia) %in% int, ]
## PCA analysis
expr <- cbind(expr.cia[order(rownames(expr.cia)), ],
expr.tcga[order(rownames(expr.tcga)), ])
clin <- data.frame(patientid = c(rownames(clin.cia),
rownames(clin.tcga)),
study = c(rep("CIA", nrow(clin.cia)),
rep("TCGA", nrow(clin.tcga))),
group = c(clin.cia[, "low_high"],
clin.tcga[, "low_high"] ))
group <- factor(clin$study)
cols <- c("#9970ab", "#74add1")
pca.results <- prcomp(t(expr))
var.res <- pca.results$sdev^2 / sum(pca.results$sdev^2)
## save merged processed data (TCGA & CIA & ICGC)
annot <- annot.tcga[annot.tcga$gene_name %in% int, ]
rownames(clin) <- clin$patientid
clin <- clin[order(rownames(clin)), ]
expr <- expr[, order(colnames(expr))]
colnames(expr) <- rownames(clin)
eset <- SummarizedExperiment(assays = list("gene_expression"= expr),
rowData= annot,
colData= clin)
save(eset, file="C:/Pancreas_Kevin/expr_tcga_cia.rda")
###############################################################################
## Remove batches
###############################################################################
load(file="C:/Pancreas_Kevin/expr_tcga_cia.rda")
clin <- data.frame(colData(eset))
expr <- assay(eset)
annot <- data.frame(rowData(eset))
mod0 <- model.matrix(~1, data=clin)
mod <- model.matrix(~ as.factor(group), data=clin)
n.sv <- num.sv(expr, mod, method="be") # be methods estimate 4 batches
svobj <- sva(expr, mod =  mod, mod0 = mod0, n.sv=n.sv)
########################################################
## Limma method and adjusting for estimated batches
########################################################
modSv <- model.matrix(~ svobj$sv + as.factor(clin$group))
########################################################
## Limma method and adjusting for estimated batches
########################################################
modSv <- model.matrix(~ svobj$sv + as.factor(clin$group))
svobj <- sva(expr, mod =  mod, mod0 = mod0, n.sv=n.sv)
dim(expr)
dir <- "C:/Pancreas_Kevin/data/"
dat.cia <- readRDS(file.path(dir, "SE_CIA.rds"))  ### Task 1: check comment at the end of script
dat.tcga <- readRDS(file.path(dir, "SE_TCGA.rds"))
#dat.icgc <- readRDS(file.path(dir, "SE_ICGC.rds"))
## extract RNA, clinical, and annotation data
expr.tcga <- assay(dat.tcga)
clin.tcga <- data.frame(colData(dat.tcga))
annot.tcga <- data.frame(rowData(dat.tcga))
expr.cia <- assay(dat.cia)
clin.cia <- data.frame(colData(dat.cia))
annot.cia <- data.frame(rowData(dat.cia))
#expr.icgc <- assay(dat.icgc)
#clin.icgc <- data.frame(colData(dat.icgc))
#annot.icgc <- data.frame(rowData(dat.icgc))
## remove TCGA NAs
gene.na <- apply(expr.tcga, 1, function(x){any(is.na(x))})
sum(gene.na)
expr.tcga <- expr.tcga[!gene.na,]
int <- intersect(rownames(expr.tcga), rownames(expr.cia)) # 17597 genes in common
expr.tcga <- expr.tcga[rownames(expr.tcga) %in% int, ]
expr.cia <- expr.cia[rownames(expr.cia) %in% int, ]
#expr.icgc <- expr.icgc[rownames(expr.icgc) %in% int, ]
## PCA analysis
expr <- cbind(expr.cia[order(rownames(expr.cia)), ],
expr.tcga[order(rownames(expr.tcga)), ])
clin <- data.frame(patientid = c(rownames(clin.cia),
rownames(clin.tcga)),
study = c(rep("CIA", nrow(clin.cia)),
rep("TCGA", nrow(clin.tcga))),
group = c(clin.cia[, "low_high"],
clin.tcga[, "low_high"] ))
annot <- annot.tcga[annot.tcga$gene_name %in% int, ]
rownames(clin) <- clin$patientid
clin <- clin[order(rownames(clin)), ]
expr <- expr[, order(colnames(expr))]
colnames(expr) <- rownames(clin)
eset <- SummarizedExperiment(assays = list("gene_expression"= expr),
rowData= annot,
colData= clin)
clin <- data.frame(colData(eset))
expr <- assay(eset)
annot <- data.frame(rowData(eset))
mod0 <- model.matrix(~1, data=clin)
mod <- model.matrix(~ as.factor(group), data=clin)
n.sv <- num.sv(expr, mod, method="be") # be methods estimate 4 batches
svobj <- sva(expr, mod =  mod, mod0 = mod0, n.sv=n.sv)
table(is.na(expr))
n.sv
head(mod)
head(mod0)
###############################################################################
## Remove batches
###############################################################################
load(file="C:/Pancreas_Kevin/expr_tcga_cia.rda")
clin <- data.frame(colData(eset))
expr <- assay(eset)
annot <- data.frame(rowData(eset))
mod0 <- model.matrix(~1, data=clin)
mod <- model.matrix(~ as.factor(group), data=clin)
n.sv <- num.sv(expr, mod, method="be") # be methods estimate 4 batches
svobj <- sva(expr, mod =  mod, mod0 = mod0, n.sv=n.sv)
n.sv
remove <- sapply(1:nrow(expr), function(k){
mean(expr[1, ])
})
table(remove == 0)
table(remove == 0.00001)
remove <- sapply(1:nrow(expr), function(k){
sd(expr[1, ])
})
table(remove == 0)
